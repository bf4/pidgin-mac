--- pidgin-2.5.5-orig/libpurple/plugin.h	2009-03-01 20:37:12.000000000 +0100
+++ pidgin-2.5.5/libpurple/plugin.h	2009-03-11 16:15:53.000000000 +0100
@@ -205,15 +205,18 @@
  */
 #if !defined(PURPLE_PLUGINS) || defined(PURPLE_STATIC_PRPL)
 # define _FUNC_NAME(x) purple_init_##x##_plugin
+# define _FUNC_NAME2(x) purple_init_##x##_plugin__optload
 # define PURPLE_INIT_PLUGIN(pluginname, initfunc, plugininfo) \
-	gboolean _FUNC_NAME(pluginname)(void);\
-	gboolean _FUNC_NAME(pluginname)(void) { \
+	gboolean _FUNC_NAME2(pluginname)(int load);\
+	gboolean _FUNC_NAME2(pluginname)(int load) { \
 		PurplePlugin *plugin = purple_plugin_new(TRUE, NULL); \
 		plugin->info = &(plugininfo); \
 		initfunc((plugin)); \
-		purple_plugin_load((plugin)); \
+		if(load) purple_plugin_load((plugin)); \
 		return purple_plugin_register(plugin); \
-	}
+	} \
+	gboolean _FUNC_NAME(pluginname)(void);\
+	gboolean _FUNC_NAME(pluginname)(void) { return _FUNC_NAME2(pluginname)(1); }
 #else /* PURPLE_PLUGINS  && !PURPLE_STATIC_PRPL */
 # define PURPLE_INIT_PLUGIN(pluginname, initfunc, plugininfo) \
 	G_MODULE_EXPORT gboolean purple_init_plugin(PurplePlugin *plugin); \
--- pidgin-2.5.5-orig/libpurple/plugins/simple.c	2007-11-14 02:22:05.000000000 +0100
+++ pidgin-2.5.5/libpurple/plugins/simple.c	2009-03-11 16:15:53.000000000 +0100
@@ -63,4 +63,4 @@
 {
 }
 
-PURPLE_INIT_PLUGIN(simple, init_plugin, info)
+PURPLE_INIT_PLUGIN(simple_a, init_plugin, info)
--- pidgin-2.5.5-orig/libpurple/protocols/msn/soap.c	2009-02-03 20:27:09.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/msn/soap.c	2009-03-11 16:15:53.000000000 +0100
@@ -34,7 +34,7 @@
 
 #include <glib.h>
 #if !defined(_WIN32) || !defined(_WINERROR_)
-#include <error.h>
+#include "error.h"
 #endif
 
 #define SOAP_TIMEOUT (5 * 60)
--- pidgin-2.5.5-orig/libpurple/protocols/oscar/family_popup.c	2008-06-12 06:28:26.000000000 +0200
+++ pidgin-2.5.5/libpurple/protocols/oscar/family_popup.c	2009-03-11 16:15:53.000000000 +0100
@@ -25,7 +25,7 @@
  * open up an informative box on the client's screen.
  */
 
-#include <oscar.h>
+#include "oscar.h"
 
 /*
  * This is all there is to it.
--- pidgin-2.5.5-orig/libpurple/protocols/oscar/family_stats.c	2008-06-12 06:28:26.000000000 +0200
+++ pidgin-2.5.5/libpurple/protocols/oscar/family_stats.c	2009-03-11 16:15:53.000000000 +0100
@@ -23,7 +23,7 @@
  *
  */
 
-#include <oscar.h>
+#include "oscar.h"
 
 static int
 reportinterval(OscarData *od, FlapConnection *conn, aim_module_t *mod, FlapFrame *frame, aim_modsnac_t *snac, ByteStream *bs)
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/ZVariables.c	2007-07-02 02:51:38.000000000 +0200
+++ pidgin-2.5.5/libpurple/protocols/zephyr/ZVariables.c	2009-03-11 16:15:53.000000000 +0100
@@ -9,7 +9,7 @@
  *	"mit-copyright.h". 
  */
 
-#include "libpurple/internal.h"
+#include <libpurple/internal.h>
 #include "internal.h"
 #include "util.h"
 
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/error_message.c	2007-01-21 19:30:00.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/zephyr/error_message.c	2009-03-11 16:15:53.000000000 +0100
@@ -7,7 +7,7 @@
 
 #include "error_table.h"
 #include "com_err.h"
-#include <sysdep.h>
+#include "sysdep.h"
 
 char *error_table_name_r __P((int, char *));
 
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/et_name.c	2007-01-21 19:30:00.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/zephyr/et_name.c	2009-03-11 16:15:53.000000000 +0100
@@ -4,7 +4,7 @@
  * For copyright info, see mit-sipb-copyright.h.
  */
 
-#include <sysdep.h>
+#include "sysdep.h"
 
 
 #define	ERRCODE_RANGE	8	/* # of bits to shift table number */
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/init_et.c	2007-01-21 19:30:00.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/zephyr/init_et.c	2009-03-11 16:15:53.000000000 +0100
@@ -5,7 +5,7 @@
  * For copyright info, see mit-sipb-copyright.h.
  */
 
-#include <sysdep.h>
+#include "sysdep.h"
 
 extern struct et_list * _et_list;
 
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/internal.h	2008-06-12 06:25:39.000000000 +0200
+++ pidgin-2.5.5/libpurple/protocols/zephyr/internal.h	2009-03-11 16:15:53.000000000 +0100
@@ -1,12 +1,12 @@
 #ifndef __INTERNAL_H__
 #define __INTERNAL_H__
 
-#include <sysdep.h>
+#include "sysdep.h"
 
 #ifdef LIBZEPHYR_EXT
 #include <zephyr/zephyr.h>
 #else
-#include <zephyr_internal.h>
+#include "zephyr_internal.h"
 #endif
 
 #ifndef WIN32
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/zephyr.c	2008-12-15 19:43:04.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/zephyr/zephyr.c	2009-03-11 16:15:53.000000000 +0100
@@ -26,7 +26,7 @@
  *
 
 */
-#include "libpurple/internal.h"
+#include <libpurple/internal.h>
 
 #include "accountopt.h"
 #include "debug.h"
--- pidgin-2.5.5-orig/libpurple/protocols/zephyr/zephyr_internal.h	2008-01-18 05:07:08.000000000 +0100
+++ pidgin-2.5.5/libpurple/protocols/zephyr/zephyr_internal.h	2009-03-11 16:15:53.000000000 +0100
@@ -18,7 +18,7 @@
 #include <sys/types.h>
 #include <sys/time.h>
 
-#include <zephyr_err.h>
+#include "zephyr_err.h"
 
 #ifndef IPPROTO_MAX	/* Make sure not already included */
 #ifndef WIN32
--- pidgin-2.5.5-orig/pidgin/gtkblist.c	2009-03-01 20:37:13.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkblist.c	2009-03-11 16:15:53.000000000 +0100
@@ -27,6 +27,9 @@
 #include "internal.h"
 #include "pidgin.h"
 
+#include "ige-mac-menu.h"
+#include "ige-mac-dock.h"
+#include "ige-mac-bundle.h"
 #include "account.h"
 #include "connection.h"
 #include "core.h"
@@ -5642,6 +5645,7 @@
 	pidgin_blist_restore_position();
 	gtk_widget_show_all(GTK_WIDGET(gtkblist->vbox));
 	gtk_widget_realize(GTK_WIDGET(gtkblist->window));
+	//ige_mac_menu_set_menu_bar(GTK_MENU_SHELL(menu));  // TODO: doesnt work yet
 	purple_blist_set_visible(purple_prefs_get_bool(PIDGIN_PREFS_ROOT "/blist/list_visible"));
 
 	/* start the refresh timer */
--- pidgin-2.5.5-orig/pidgin/gtkdnd-hints.c	2007-09-19 04:46:58.000000000 +0200
+++ pidgin-2.5.5/pidgin/gtkdnd-hints.c	2009-03-11 16:15:53.000000000 +0100
@@ -24,6 +24,10 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1301, USA.
  */
 
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
 #include "gtkdnd-hints.h"
 
 #include <gtk/gtk.h>
--- pidgin-2.5.5-orig/pidgin/gtkdocklet-gtk.c	1970-01-01 01:00:00.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkdocklet-gtk.c	2009-03-11 16:15:53.000000000 +0100
@@ -0,0 +1,195 @@
+/*
+ * System tray icon (aka docklet) plugin for Purple
+ *
+ * Copyright (C) 2007 Anders Hasselqvist
+ * 
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+ * 02111-1307, USA.
+ */
+
+#include "internal.h"
+#include "pidgin.h"
+#include "debug.h"
+#include "prefs.h"
+#include "pidginstock.h"
+#include "gtkdocklet.h"
+
+#include <gtk/gtkstatusicon.h>
+
+
+/* globals */
+GtkStatusIcon *docklet = NULL;
+
+static void
+docklet_gtk_status_clicked_cb(GtkStatusIcon *status_icon, guint button, guint activate_time, gpointer user_data)
+{
+	purple_debug(PURPLE_DEBUG_INFO, "docklet", "button clicked %d\n", button);
+
+#if defined(__APPLE__) && !defined(HAVE_X11) 
+	/* You can only click left mouse button on MacOSX native GTK. Let that be the menu */ 
+	pidgin_docklet_clicked(3); 
+#else 
+	pidgin_docklet_clicked(button); 
+#endif
+}
+
+static void
+docklet_gtk_status_update_icon(PurpleStatusPrimitive status, gboolean connecting, gboolean pending)
+{
+	const gchar *icon_name = NULL;
+
+	switch (status) {
+		case PURPLE_STATUS_OFFLINE:
+			icon_name = PIDGIN_STOCK_TRAY_OFFLINE;
+			break;
+		case PURPLE_STATUS_AWAY:
+			icon_name = PIDGIN_STOCK_TRAY_AWAY;
+			break;
+		case PURPLE_STATUS_UNAVAILABLE:
+			icon_name = PIDGIN_STOCK_TRAY_BUSY;
+			break;
+		case PURPLE_STATUS_EXTENDED_AWAY:
+			icon_name = PIDGIN_STOCK_TRAY_XA;
+			break;
+		case PURPLE_STATUS_INVISIBLE:
+			icon_name = PIDGIN_STOCK_TRAY_INVISIBLE;
+			break;
+		default:
+			icon_name = PIDGIN_STOCK_TRAY_AVAILABLE;
+			break;
+	}
+
+	if (pending)
+		icon_name = PIDGIN_STOCK_TRAY_PENDING;
+	if (connecting)
+		icon_name = PIDGIN_STOCK_TRAY_CONNECT;
+
+	if(icon_name) {
+		GtkWidget *win;
+		GdkPixbuf *pixbuf;
+
+		/* We do these steps because gtk_status_icon_set_from_stock()
+		   only accepts icons of exactly size GTK_ICON_SIZE_SMALL_TOOLBAR.
+		   Doing it this way we force GtkStatusIcon to scale the pixbuf
+		   itself */
+		
+		/* Er, yeah, a hack, but it works :).
+		   We need to have a widget for getting a style */
+		win = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+		gtk_widget_realize(win);
+
+		pixbuf = gtk_widget_render_icon(win, icon_name,
+										GTK_ICON_SIZE_MENU, NULL);
+
+		if (pixbuf == NULL)
+		{
+			gtk_widget_destroy(win);
+			return;
+		}
+
+		gtk_status_icon_set_from_pixbuf(docklet, pixbuf);
+		g_object_unref(pixbuf);
+		gtk_widget_destroy(win);
+	}
+}
+
+static gboolean
+docklet_gtk_status_resize_icon(GtkStatusIcon *status_icon, gint size, gpointer user_data)
+{
+	/* Let GTK rescale for now */
+	return FALSE;
+}
+
+static void
+docklet_gtk_status_set_tooltip(gchar *tooltip)
+{
+	if (tooltip) {
+		gtk_status_icon_set_tooltip(docklet, tooltip);
+	} else {
+		gtk_status_icon_set_tooltip(docklet, NULL);
+	}
+}
+
+static void
+docklet_gtk_status_position_menu(GtkMenu *menu, int *x, int *y, gboolean *push_in,
+									gpointer user_data)
+{
+	gtk_status_icon_position_menu(menu, x, y, push_in, docklet);
+}
+
+static void
+docklet_gtk_status_destroy()
+{
+	g_return_if_fail(docklet != NULL);
+
+	pidgin_docklet_remove();
+	
+	g_object_unref(G_OBJECT(docklet));
+	docklet = NULL;
+
+	purple_debug(PURPLE_DEBUG_INFO, "docklet", "destroyed\n");
+}
+
+static void
+docklet_gtk_status_create(gboolean recreate)
+{
+	if (docklet) {
+		/* if this is being called when a tray icon exists, it's because
+		   something messed up. try destroying it before we proceed,
+		   although docklet_refcount may be all hosed. hopefully won't happen. */
+		purple_debug(PURPLE_DEBUG_WARNING, "docklet", "trying to create icon but it already exists?\n");
+		docklet_gtk_status_destroy();
+	}
+
+	docklet = gtk_status_icon_new();
+	g_return_if_fail(docklet != NULL);
+
+	g_signal_connect(G_OBJECT(docklet), "popup-menu", G_CALLBACK(docklet_gtk_status_clicked_cb), NULL);
+	g_signal_connect(G_OBJECT(docklet), "size-changed", G_CALLBACK(docklet_gtk_status_resize_icon), NULL);
+
+	pidgin_docklet_embedded();
+	gtk_status_icon_set_visible(docklet, TRUE);
+	purple_debug(PURPLE_DEBUG_INFO, "docklet", "created\n");
+}
+
+static void
+docklet_gtk_status_create_ui_op()
+{
+	docklet_gtk_status_create(FALSE);
+}
+
+
+static void
+docklet_gtk_status_set_blink(gboolean blinking)
+{
+	gtk_status_icon_set_blinking(docklet, blinking);
+}
+
+static struct docklet_ui_ops ui_ops =
+{
+	docklet_gtk_status_create_ui_op,
+	docklet_gtk_status_destroy,
+	docklet_gtk_status_update_icon,
+	NULL,
+	docklet_gtk_status_set_tooltip,
+	docklet_gtk_status_position_menu,
+	docklet_gtk_status_set_blink
+};
+
+void
+docklet_ui_init()
+{
+	pidgin_docklet_set_ui_ops(&ui_ops);
+}
--- pidgin-2.5.5-orig/pidgin/gtkdocklet-x11.c	2008-08-13 03:23:17.000000000 +0200
+++ pidgin-2.5.5/pidgin/gtkdocklet-x11.c	2009-03-11 16:15:53.000000000 +0100
@@ -314,10 +314,11 @@
 	docklet_x11_blank_icon,
 	docklet_x11_set_tooltip,
 #if GTK_CHECK_VERSION(2,2,0)
-	docklet_x11_position_menu
+	docklet_x11_position_menu,
 #else
-	NULL
+	NULL,
 #endif
+	NULL /* blink */
 };
 
 void
--- pidgin-2.5.5-orig/pidgin/gtkdocklet.c	2009-02-12 20:32:56.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkdocklet.c	2009-03-11 16:15:53.000000000 +0100
@@ -62,7 +62,7 @@
  * docklet status and utility functions
  **************************************************************************/
 static gboolean
-docklet_blink_icon(gpointer data)
+docklet_blink_icon_cb()
 {
 	static gboolean blinked = FALSE;
 	gboolean ret = FALSE; /* by default, don't keep blinking */
@@ -85,6 +85,15 @@
 	return ret;
 }
 
+static void
+docklet_blink_icon(gboolean blink)
+{
+	if (ui_ops->blink)
+		ui_ops->blink(blink);
+	else if (blink)
+		docklet_blinking_timer = g_timeout_add(500, docklet_blink_icon_cb, NULL);
+}
+
 static GList *
 get_pending_list(guint max)
 {
@@ -214,7 +223,9 @@
 		/* and schedule the blinker function if messages are pending */
 		if (purple_prefs_get_bool(PIDGIN_PREFS_ROOT "/docklet/blink")
 			&& pending && !connecting && docklet_blinking_timer == 0) {
-			docklet_blinking_timer = g_timeout_add(500, docklet_blink_icon, NULL);
+			docklet_blink_icon(TRUE);
+		} else {
+			docklet_blink_icon(FALSE);
 		}
 	}
 
--- pidgin-2.5.5-orig/pidgin/gtkdocklet.h	2007-10-28 02:52:05.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkdocklet.h	2009-03-11 16:15:53.000000000 +0100
@@ -35,6 +35,7 @@
 	void (*blank_icon)(void);
 	void (*set_tooltip)(gchar *);
 	GtkMenuPositionFunc position_menu;
+	void (*blink)(gboolean);
 };
 
 
--- pidgin-2.5.5-orig/pidgin/gtkmain.c	2009-01-24 16:13:25.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkmain.c	2009-03-11 16:15:53.000000000 +0100
@@ -448,6 +448,18 @@
 }
 #endif /* HAVE_STARTUP_NOTIFICATION */
 
+#ifdef __APPLE__
+#include <Carbon/Carbon.h>
+#endif
+
+#ifdef STATIC_PLUGIN_INIT
+STATIC_PLUGIN_INIT
+#else
+static void static_plugin_init(void);
+static void static_plugin_init(void) {}
+#endif
+
+
 /* FUCKING GET ME A TOWEL! */
 #ifdef _WIN32
 /* suppress gcc "no previous prototype" warning */
@@ -457,6 +469,24 @@
 int main(int argc, char *argv[])
 #endif
 {
+#ifdef __APPLE__
+	// all the directories are coded as relative paths
+	char parentdir[MAXPATHLEN];
+	CFURLRef url = CFBundleCopyBundleURL(CFBundleGetMainBundle());
+	//CFURLRef url2 = CFURLCreateCopyDeletingLastPathComponent(0, url);
+	if (CFURLGetFileSystemRepresentation(url, true, (UInt8 *)parentdir, MAXPATHLEN)) {
+		assert ( chdir (parentdir) == 0 );   /* chdir to the binary app's parent */
+		//system("bash");
+	}
+	CFRelease(url);
+	//CFRelease(url2);
+	
+    /* This is passed if we are launched by double-clicking */
+    if ( argc >= 2 && strncmp (argv[1], "-psn", 4) == 0 ) {
+		argc = 1; // just ignore all the parameter
+	}	
+#endif
+	
 	gboolean opt_help = FALSE;
 	gboolean opt_login = FALSE;
 	gboolean opt_nologin = FALSE;
@@ -694,6 +724,7 @@
 		}
 	}
 
+	gtk_rc_add_default_file(CONFDIR "/gtkrc");
 	search_path = g_build_filename(purple_user_dir(), "gtkrc-2.0", NULL);
 	gtk_rc_add_default_file(search_path);
 	g_free(search_path);
@@ -796,6 +827,8 @@
 	purple_set_blist(purple_blist_new());
 	purple_blist_load();
 
+	static_plugin_init();
+	
 	/* load plugins we had when we quit */
 	purple_plugins_load_saved(PIDGIN_PREFS_ROOT "/plugins/loaded");
 
--- pidgin-2.5.5-orig/pidgin/gtkutils.c	2008-12-15 19:43:04.000000000 +0100
+++ pidgin-2.5.5/pidgin/gtkutils.c	2009-03-11 16:15:53.000000000 +0100
@@ -28,7 +28,7 @@
 #include "internal.h"
 #include "pidgin.h"
 
-#ifndef _WIN32
+#ifdef HAVE_X11
 # include <X11/Xlib.h>
 #else
 # ifdef small
@@ -43,6 +43,10 @@
 # endif
 #endif
 
+#ifdef __APPLE__
+#include <Carbon/Carbon.h>
+#endif
+
 #include <gdk/gdkkeysyms.h>
 
 #include "conversation.h"
@@ -2912,7 +2916,26 @@
 
 void pidgin_set_urgent(GtkWindow *window, gboolean urgent)
 {
-#if GTK_CHECK_VERSION(2,8,0)
+#if defined __APPLE__
+	// TODO: move that down and use gtk_window_set_urgency_hint after I have that code in gtk+
+	static NMRecPtr	notePtr = NULL;
+	if(urgent) {
+		if(notePtr == NULL) notePtr = (NMRecPtr) NewPtr ( sizeof ( NMRec ) );
+		OSErr		err;
+		
+		notePtr->qType = nmType; // standard queue type for NM
+		notePtr->nmMark = urgent; // 1;
+		notePtr->nmIcon = NULL;
+		notePtr->nmSound = NULL;  //(Handle) -1L; // use system alert snd
+		notePtr->nmStr = NULL; // (StringPtr) NewPtr ( sizeof ( Str255 ) ); BlockMoveData( notice, notePtr->nmStr, notice[0] + 1 );
+		notePtr->nmResp = NULL; // NewNMProc( MyResponse );
+		notePtr->nmRefCon = 0; // fFatal;
+		
+		err = NMInstall( notePtr );	
+	} else
+		if(notePtr) NMRemove( notePtr );
+	
+#elif GTK_CHECK_VERSION(2,8,0)
 	gtk_window_set_urgency_hint(window, urgent);
 #elif defined _WIN32
 	winpidgin_window_flash(window, urgent);
--- pidgin-2.5.5-orig/pidgin/win32/gtkdocklet-win32.c	2008-03-31 02:32:21.000000000 +0200
+++ pidgin-2.5.5/pidgin/win32/gtkdocklet-win32.c	2009-03-11 16:15:53.000000000 +0100
@@ -661,7 +661,8 @@
 	winpidgin_tray_update_icon,
 	winpidgin_tray_blank_icon,
 	winpidgin_tray_set_tooltip,
-	NULL
+	NULL,						/* position menu */
+	NULL						/* blink */
 };
 
 /* Used by docklet's plugin load func */
